export const abi = {
  objectTypes: [
    {
      type: "MaybeUriOrManifest",
      name: null,
      required: null,
      kind: 1,
      properties: [
        {
          type: "String",
          name: "uri",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "String", name: "uri", required: null, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
        {
          type: "Bytes",
          name: "manifest",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "Bytes", name: "manifest", required: null, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      ],
      interfaces: [],
    },
  ],
  enumTypes: [],
  interfaceTypes: [],
  importedObjectTypes: [],
  importedModuleTypes: [],
  importedEnumTypes: [],
  importedEnvTypes: [],
  moduleType: {
    type: "Module",
    name: null,
    required: null,
    kind: 128,
    methods: [
      {
        type: "Method",
        name: "tryResolveUri",
        required: true,
        kind: 64,
        arguments: [
          {
            type: "String",
            name: "authority",
            required: true,
            kind: 34,
            array: null,
            map: null,
            scalar: {
              type: "String",
              name: "authority",
              required: true,
              kind: 4,
            },
            object: null,
            enum: null,
            unresolvedObjectOrEnum: null,
          },
          {
            type: "String",
            name: "path",
            required: true,
            kind: 34,
            array: null,
            map: null,
            scalar: { type: "String", name: "path", required: true, kind: 4 },
            object: null,
            enum: null,
            unresolvedObjectOrEnum: null,
          },
        ],
        return: {
          type: "MaybeUriOrManifest",
          name: "tryResolveUri",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: null,
          object: {
            type: "MaybeUriOrManifest",
            name: "tryResolveUri",
            required: null,
            kind: 8192,
          },
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      },
      {
        type: "Method",
        name: "getFile",
        required: true,
        kind: 64,
        arguments: [
          {
            type: "String",
            name: "path",
            required: true,
            kind: 34,
            array: null,
            map: null,
            scalar: { type: "String", name: "path", required: true, kind: 4 },
            object: null,
            enum: null,
            unresolvedObjectOrEnum: null,
          },
        ],
        return: {
          type: "Bytes",
          name: "getFile",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "Bytes", name: "getFile", required: null, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      },
    ],
    imports: [],
    interfaces: [],
  },
};
