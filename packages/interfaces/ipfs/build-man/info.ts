export const abi = {
  objectTypes: [
    {
      type: "ResolveResult",
      name: null,
      required: null,
      kind: 1,
      properties: [
        {
          type: "String",
          name: "cid",
          required: true,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "String", name: "cid", required: true, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
        {
          type: "String",
          name: "provider",
          required: true,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "String", name: "provider", required: true, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      ],
      interfaces: [],
    },
    {
      type: "Options",
      name: null,
      required: null,
      kind: 1,
      properties: [
        {
          type: "UInt32",
          name: "timeout",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "UInt32", name: "timeout", required: null, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
          comment:
            "Timeout (in ms) for the operation.\nFallback providers are used if timeout is reached.",
        },
        {
          type: "String",
          name: "provider",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "String", name: "provider", required: null, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
          comment: "The IPFS provider to be used",
        },
        {
          type: "Boolean",
          name: "disableParallelRequests",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: {
            type: "Boolean",
            name: "disableParallelRequests",
            required: null,
            kind: 4,
          },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
          comment: "Disable querying providers in parallel when resolving URIs",
        },
      ],
      interfaces: [],
    },
  ],
  enumTypes: [],
  interfaceTypes: [],
  importedObjectTypes: [],
  importedModuleTypes: [],
  importedEnumTypes: [],
  importedEnvTypes: [],
  moduleType: {
    type: "Module",
    name: null,
    required: null,
    kind: 128,
    methods: [
      {
        type: "Method",
        name: "cat",
        required: true,
        kind: 64,
        arguments: [
          {
            type: "String",
            name: "cid",
            required: true,
            kind: 34,
            array: null,
            map: null,
            scalar: { type: "String", name: "cid", required: true, kind: 4 },
            object: null,
            enum: null,
            unresolvedObjectOrEnum: null,
          },
          {
            type: "Options",
            name: "options",
            required: null,
            kind: 34,
            array: null,
            map: null,
            scalar: null,
            object: {
              type: "Options",
              name: "options",
              required: null,
              kind: 8192,
            },
            enum: null,
            unresolvedObjectOrEnum: null,
          },
        ],
        return: {
          type: "Bytes",
          name: "cat",
          required: true,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "Bytes", name: "cat", required: true, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      },
      {
        type: "Method",
        name: "resolve",
        required: true,
        kind: 64,
        arguments: [
          {
            type: "String",
            name: "cid",
            required: true,
            kind: 34,
            array: null,
            map: null,
            scalar: { type: "String", name: "cid", required: true, kind: 4 },
            object: null,
            enum: null,
            unresolvedObjectOrEnum: null,
          },
          {
            type: "Options",
            name: "options",
            required: null,
            kind: 34,
            array: null,
            map: null,
            scalar: null,
            object: {
              type: "Options",
              name: "options",
              required: null,
              kind: 8192,
            },
            enum: null,
            unresolvedObjectOrEnum: null,
          },
        ],
        return: {
          type: "ResolveResult",
          name: "resolve",
          required: null,
          kind: 34,
          array: null,
          map: null,
          scalar: null,
          object: {
            type: "ResolveResult",
            name: "resolve",
            required: null,
            kind: 8192,
          },
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      },
      {
        type: "Method",
        name: "addFile",
        required: true,
        kind: 64,
        arguments: [
          {
            type: "Bytes",
            name: "data",
            required: true,
            kind: 34,
            array: null,
            map: null,
            scalar: { type: "Bytes", name: "data", required: true, kind: 4 },
            object: null,
            enum: null,
            unresolvedObjectOrEnum: null,
          },
        ],
        return: {
          type: "String",
          name: "addFile",
          required: true,
          kind: 34,
          array: null,
          map: null,
          scalar: { type: "String", name: "addFile", required: true, kind: 4 },
          object: null,
          enum: null,
          unresolvedObjectOrEnum: null,
        },
      },
    ],
    imports: [],
    interfaces: [],
  },
};