// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DataSet extends ethereum.Event {
  get params(): DataSet__Params {
    return new DataSet__Params(this);
  }
}

export class DataSet__Params {
  _event: DataSet;

  constructor(event: DataSet) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SimpleStorage extends ethereum.SmartContract {
  static bind(address: Address): SimpleStorage {
    return new SimpleStorage("SimpleStorage", address);
  }

  get(): BigInt {
    let result = super.call("get", "get():(uint256)", []);

    return result[0].toBigInt();
  }

  try_get(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("get", "get():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class SetCall extends ethereum.Call {
  get inputs(): SetCall__Inputs {
    return new SetCall__Inputs(this);
  }

  get outputs(): SetCall__Outputs {
    return new SetCall__Outputs(this);
  }
}

export class SetCall__Inputs {
  _call: SetCall;

  constructor(call: SetCall) {
    this._call = call;
  }

  get x(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCall__Outputs {
  _call: SetCall;

  constructor(call: SetCall) {
    this._call = call;
  }
}
