/* eslint-disable @typescript-eslint/naming-convention */
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WrapManifest {
  /**
   * WRAP Standard Version
   */
  version: "0.1.0";
  /**
   * Wrapper Package Type
   */
  type: "wasm" | "interface";
  /**
   * Wrapper Name
   */
  name: string;
  abi: Abi;
  __type: "WrapManifest";
}
export interface Abi {
  objectTypes: (({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  })[];
  moduleTypes?: (({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  })[];
  enumType?: (({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  })[];
  interfaceTypes: (({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    uri: string;
    namespace: string;
    nativeType: string;
  })[];
  importedObjectTypes: ((({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  }) & {
    uri: string;
    namespace: string;
    nativeType: string;
  } & {
    comment?: string;
  })[];
  importedModuleTypes: ((({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  }) & {
    uri: string;
    namespace: string;
    nativeType: string;
  } & {
    comment?: string;
  })[];
  importedEnumTypes: ((({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  }) & {
    uri: string;
    namespace: string;
    nativeType: string;
  } & {
    comment?: string;
  })[];
  importedEnvTypes: ((({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  }) & {
    uri: string;
    namespace: string;
    nativeType: string;
  } & {
    comment?: string;
  })[];
  envType?: ({
    kind: number;
  } & {
    type?: string;
    name?: string;
    required?: boolean;
  }) & {
    comment?: string;
  };
}
