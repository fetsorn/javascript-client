/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/deserialize-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/deserialize-ts.mustache,
 * and run node ./scripts/manifest/generateFormatTypes.js to regenerate this file.
 */

import {
  DappManifest,
  AnyDappManifest,
  migrateDappManifest,
  validateDappManifest,
  latestDappManifestFormat,
} from ".";
import { DeserializeManifestOptions } from "../../";

import { compare } from "semver";
import YAML from "js-yaml";
import { Tracer } from "@web3api/tracing-js";

export const deserializeDappManifest = Tracer.traceFunc(
  "core: deserializeDappManifest",
  (manifest: string, options?: DeserializeManifestOptions): DappManifest => {
    const anyDappManifest = YAML.safeLoad(manifest) as
      | AnyDappManifest
      | undefined;

    if (!anyDappManifest) {
      throw Error(`Unable to parse DappManifest: ${manifest}`);
    }

    if (!options || !options.noValidate) {
      validateDappManifest(anyDappManifest, options?.extSchema);
    }

    anyDappManifest.__type = "DappManifest";

    const versionCompare = compare(
      anyDappManifest.format,
      latestDappManifestFormat
    );

    if (versionCompare === -1) {
      // Upgrade
      return migrateDappManifest(anyDappManifest, latestDappManifestFormat);
    } else if (versionCompare === 1) {
      // Downgrade
      throw Error(
        `Cannot downgrade Web3API version ${anyDappManifest.format}, please upgrade your Web3ApiClient package.`
      );
    } else {
      // Latest
      return anyDappManifest as DappManifest;
    }
  }
);
