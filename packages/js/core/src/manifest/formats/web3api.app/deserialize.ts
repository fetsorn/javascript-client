/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/deserialize-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/deserialize-ts.mustache,
 * and run node ./scripts/manifest/generateFormatTypes.js to regenerate this file.
 */

import {
  AppManifest,
  AnyAppManifest,
  migrateAppManifest,
  validateAppManifest,
  latestAppManifestFormat,
} from ".";
import { DeserializeManifestOptions } from "../../";

import { compare } from "semver";
import YAML from "js-yaml";
import { Tracer } from "@web3api/tracing-js";

export const deserializeAppManifest = Tracer.traceFunc(
  "core: deserializeAppManifest",
  (manifest: string, options?: DeserializeManifestOptions): AppManifest => {
    let anyAppManifest: AnyAppManifest | undefined;
    try {
      anyAppManifest = JSON.parse(manifest) as AnyAppManifest;
    } catch (e) {
      anyAppManifest = YAML.safeLoad(manifest) as
      | AnyAppManifest
      | undefined;
    }

    if (!anyAppManifest) {
      throw Error(`Unable to parse AppManifest: ${manifest}`);
    }

    if (!options || !options.noValidate) {
      validateAppManifest(anyAppManifest, options?.extSchema);
    }

    anyAppManifest.__type = "AppManifest";

    const versionCompare = compare(
      anyAppManifest.format,
      latestAppManifestFormat
    );

    if (versionCompare === -1) {
      // Upgrade
      return migrateAppManifest(anyAppManifest, latestAppManifestFormat);
    } else if (versionCompare === 1) {
      // Downgrade
      throw Error(
        `Cannot downgrade Web3API version ${anyAppManifest.format}, please upgrade your Web3ApiClient package.`
      );
    } else {
      // Latest
      return anyAppManifest as AppManifest;
    }
  }
);
