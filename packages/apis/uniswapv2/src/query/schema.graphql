#import { Query } into Ethereum from "w3://ens/ethereum.web3api.eth"
#import { ChainId, TradeType, Rounding, Currency, Token, TokenAmount, TradeOptions, Pair, Route, Trade } from "../common/schema.graphql"

type BestTradeOptions {
  maxNumResults: UInt32
  maxHops: UInt32
}


type SwapParameters {
  methodName: String!
  args: [String!]!
  value: String!
}

type Query {

  # Token
  tokenEquals(
    token: Token!
    other: Token!
  ): Boolean!

  tokenAmountEquals(
    tokenAmount0: TokenAmount!
    tokenAmount1: TokenAmount!
  ): Boolean!

  tokenSortsBefore(
    token: Token!
    other: Token!
  ): Boolean!

  # Pair
  pairAddress(
    token0: Token!
    token1: Token!
  ): String!

  pairLiquidityToken(
    pair: Pair!
  ): Token!

  pairReserves(
    pair: Pair!
  ): [TokenAmount!]! # [Uint256!]!

  pairToken0Price(
    pair: Pair!
  ): TokenAmount!

  pairToken1Price(
    pair: Pair!
  ): TokenAmount!

  pairOutputAmount(
    pair: Pair!
    inputAmount: TokenAmount!
  ): TokenAmount!

  pairOutputNextPair(
    pair: Pair!
    inputAmount: TokenAmount!
  ): Pair!

  pairInputAmount(
    pair: Pair!
    outputAmount: TokenAmount!
  ): TokenAmount!

  pairInputNextPair(
    pair: Pair!
    outputAmount: TokenAmount!
  ): Pair!

  pairLiquidityMinted(
    pair: Pair!
    totalSupply: TokenAmount!
    tokenAmount0: TokenAmount!
    tokenAmount1: TokenAmount!
  ): TokenAmount

  pairLiquidityValue(
    pair: Pair!
    totalSupply: TokenAmount!
    liquidity: TokenAmount!
    feeOn: Boolean
    kLast: String # Uint256
  ): [TokenAmount!]!

  # Route
  createRoute(
    pairs: [Pair!]!
    input: Token!
    output: Token
  ): Route!

  routePath(
    pairs: [Pair!]!
    input: Token!
  ): [Token!]!

  routeMidPrice(
    route: Route!
  ): TokenAmount!

  # Router
  swapCallParameters(
    trade: Trade!,
    tradeOptions: TradeOptions!
  ): SwapParameters!

  # Trade
  createTrade(
    route: Route!
    amount: TokenAmount!
    tradeType: TradeType!
  ): Trade!

  tradeExecutionPrice(
    trade: Trade!
  ): TokenAmount!

  tradeNextMidPrice(
    trade: Trade!
  ): TokenAmount!

  tradeSlippage(
    trade: Trade!
  ): TokenAmount!

  tradeMinimumAmountOut(
    trade: Trade!
    slippageTolerance: String! # Float32!
  ): TokenAmount!

  tradeMaximumAmountIn(
    trade: Trade!
    slippageTolerance: String! # Float32!
  ): TokenAmount!

  bestTradeExactIn(
    pairs: [Pair!]!
    amountIn: TokenAmount!
    tokenOut: Token!
    options: BestTradeOptions
  ): [Trade!]!

  bestTradeExactOut(
    pairs: [Pair!]!
    tokenIn: Token!
    amountOut: TokenAmount!
    options: BestTradeOptions
  ): [Trade!]!

  # Fetch
  fetchTokenData(
    chainId: ChainId!
    address: String!
    symbol: String
    name: String
  ): Token!

  fetchPairData(
    token0: Token!
    token1: Token!
  ): Pair!

  fetchTotalSupply(
    token: Token!
  ): TokenAmount!

  fetchKLast(
    token: Token!
  ): String! # Uint256!

  # Constants
  factoryAddress: String!
  initCodeHash: String!
  minimumLiquidity: UInt32!
}
