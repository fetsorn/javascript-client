# Default Setup
x remove the "language" manifest key, use "build: ./web3api.build.yaml" or "build: wasm/assemblyscript"
x build manifest proper
x x update the existing manifest code to use "RootManifest"
x x Add "BuildManifest" to the core
x x validate web3api.build.yaml manifest
x x env.json gets added to env property in the json schema
x dockerfile default env variables values
x default build manifest for wasm/assemblyscript
x x define custom manifest to be used
x Use query.module.file in the docker file
x whitelist instead of a blacklist (better for security)
x mustache template? yes.
x x use this for includes
x x use this building query and/or mutation
x Remove ONBUILD in the "leaf" image
x validate exports
x output build image ID

# Future
- should we treat the build images like we do the services
  for the test-env? making them seperate npm packages?
- - (yes, but do after mege, use test-env)

# Misc Cleanup
x intl strings
x update template projects
- docker command failure cli output (asc compiler errors)
- better output text
- - --verbose (docker logs)
- 1 run cli command (function)
- e2e tests

# test
- Project w/o web3api.build.yaml
- Project w/ web3api.build.yaml but no dockerfile
- Project w/ dockerfile
- Project w/ web3api.yaml in sub directory
- Project w/ missing config variable
- validation: invalid exports (empty wasm module)
- validate ENV variables are being detected and required as needed (how to differentiate between optional and required?)
- - docker should do this, make sure. Mayybe there's another command we can run before to verify all env vars exist?
- - docker validate? docker-compose config
- missing assemblyscript dependency
